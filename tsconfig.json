{
  "compilerOptions": {
    // 目标代码(ts -> js (es5/6/7)) 转换成
    "target": "esnext",
    // 目标代码需要使用的模块化方案(commonjs require/module.exports/es  module  import/export)  这里还可以设置为umd 表示支持多种模块化方案
    "module": "esnext",
    // 打开一些的严格的检查
    "strict": true,
    // 要不要对我们jsx进行怎么样的处理
    "jsx": "preserve",
    // 辅助的导入功能
    "importHelpers": true,
    // 按照node 的方式去解析模块 import
    "moduleResolution": "node",
    // 跳过对一些库的 类型检测
    "skipLibCheck": true,
    // es module 和 commonjs 能不能一起使用
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    // 要不要生成映射文件（ts -> js）
    "sourceMap": true,
    // 文件路径在解析时，基本url
    "baseUrl": ".",
    // 指定具体要解析使用的类型
    "types": ["webpack-env"],
    // 路径解析 （类似与 webpack alias）
    "paths": {
      "@/*": ["src/*"],
      "components/*": ["src/components/*"]
    },
    // 可以指定在项目中可以 使用哪些库的类型（Proxy/window/Document）
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"]
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  "exclude": ["node_modules"]
}
